// Code generated by MockGen. DO NOT EDIT.
// Source: nodes/default_node.go

// Package mocks is a generated GoMock package.
package mocks

import (
	context "context"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	types "github.com/srl-labs/containerlab/types"
)

// MockNodeOverwrites is a mock of NodeOverwrites interface.
type MockNodeOverwrites struct {
	ctrl     *gomock.Controller
	recorder *MockNodeOverwritesMockRecorder
}

// MockNodeOverwritesMockRecorder is the mock recorder for MockNodeOverwrites.
type MockNodeOverwritesMockRecorder struct {
	mock *MockNodeOverwrites
}

// NewMockNodeOverwrites creates a new mock instance.
func NewMockNodeOverwrites(ctrl *gomock.Controller) *MockNodeOverwrites {
	mock := &MockNodeOverwrites{ctrl: ctrl}
	mock.recorder = &MockNodeOverwritesMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockNodeOverwrites) EXPECT() *MockNodeOverwritesMockRecorder {
	return m.recorder
}

// CheckInterfaceNamingConvention mocks base method.
func (m *MockNodeOverwrites) CheckInterfaceNamingConvention() error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CheckInterfaceNamingConvention")
	ret0, _ := ret[0].(error)
	return ret0
}

// CheckInterfaceNamingConvention indicates an expected call of CheckInterfaceNamingConvention.
func (mr *MockNodeOverwritesMockRecorder) CheckInterfaceNamingConvention() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CheckInterfaceNamingConvention", reflect.TypeOf((*MockNodeOverwrites)(nil).CheckInterfaceNamingConvention))
}

// GetImages mocks base method.
func (m *MockNodeOverwrites) GetImages(ctx context.Context) map[string]string {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetImages", ctx)
	ret0, _ := ret[0].(map[string]string)
	return ret0
}

// GetImages indicates an expected call of GetImages.
func (mr *MockNodeOverwritesMockRecorder) GetImages(ctx interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetImages", reflect.TypeOf((*MockNodeOverwrites)(nil).GetImages), ctx)
}

// PullImage mocks base method.
func (m *MockNodeOverwrites) PullImage(ctx context.Context) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "PullImage", ctx)
	ret0, _ := ret[0].(error)
	return ret0
}

// PullImage indicates an expected call of PullImage.
func (mr *MockNodeOverwritesMockRecorder) PullImage(ctx interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "PullImage", reflect.TypeOf((*MockNodeOverwrites)(nil).PullImage), ctx)
}

// RunExecType mocks base method.
func (m *MockNodeOverwrites) RunExecType(ctx context.Context, exec *types.Exec) (types.ExecReader, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "RunExecType", ctx, exec)
	ret0, _ := ret[0].(types.ExecReader)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// RunExecType indicates an expected call of RunExecType.
func (mr *MockNodeOverwritesMockRecorder) RunExecType(ctx, exec interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "RunExecType", reflect.TypeOf((*MockNodeOverwrites)(nil).RunExecType), ctx, exec)
}

// VerifyHostRequirements mocks base method.
func (m *MockNodeOverwrites) VerifyHostRequirements() error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "VerifyHostRequirements")
	ret0, _ := ret[0].(error)
	return ret0
}

// VerifyHostRequirements indicates an expected call of VerifyHostRequirements.
func (mr *MockNodeOverwritesMockRecorder) VerifyHostRequirements() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "VerifyHostRequirements", reflect.TypeOf((*MockNodeOverwrites)(nil).VerifyHostRequirements))
}

// VerifyStartupConfig mocks base method.
func (m *MockNodeOverwrites) VerifyStartupConfig(topoDir string) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "VerifyStartupConfig", topoDir)
	ret0, _ := ret[0].(error)
	return ret0
}

// VerifyStartupConfig indicates an expected call of VerifyStartupConfig.
func (mr *MockNodeOverwritesMockRecorder) VerifyStartupConfig(topoDir interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "VerifyStartupConfig", reflect.TypeOf((*MockNodeOverwrites)(nil).VerifyStartupConfig), topoDir)
}
